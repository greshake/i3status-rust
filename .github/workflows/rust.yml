name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check
    runs-on: ubuntu-20.04
    steps:
      - name: Get required packages
        run: sudo apt-get update && sudo apt-get install libdbus-1-dev libpulse-dev libsensors-dev libnotmuch-dev pandoc
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-features

  test:
    name: Test Suite
    runs-on: ubuntu-20.04
    steps:
      - name: Get required packages
        run: sudo apt-get update && sudo apt-get install libdbus-1-dev libpulse-dev libsensors-dev libnotmuch-dev pandoc
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features

  fmt:
    name: Rustfmt
    runs-on: ubuntu-20.04
    steps:
      - name: Get required packages
        run: sudo apt-get update && sudo apt-get install libdbus-1-dev libpulse-dev libsensors-dev libnotmuch-dev pandoc
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-20.04
    steps:
      - name: Get required packages
        run: sudo apt-get update && sudo apt-get install libdbus-1-dev libpulse-dev libsensors-dev libnotmuch-dev pandoc
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features --all-targets -- -D warnings
