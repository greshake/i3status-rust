//! # DBus interface proxies for: `com.github.altdesktop.playerctld`
//!
//! This code was generated by `zbus-xmlgen` `3.1.0` from DBus introspection data.
//! Source: `Service 'org.mpris.MediaPlayer2.playerctld' on session bus`.
//!
//! You may prefer to adapt it, instead of using it verbatim.
//!
//! More information can be found in the
//! [Writing a client proxy](https://dbus.pages.freedesktop.org/zbus/client.html)
//! section of the zbus documentation.
//!
//! This DBus object implements
//! [standard DBus interfaces](https://dbus.freedesktop.org/doc/dbus-specification.html),
//! (`org.freedesktop.DBus.*`) for which the following zbus proxies can be used:
//!
//! * [`zbus::fdo::PropertiesProxy`]
//! * [`zbus::fdo::IntrospectableProxy`]
//! * [`zbus::fdo::PeerProxy`]
//!
//! â€¦consequently `zbus-xmlgen` did not generate code for the above interfaces.

#[zbus::proxy(
    interface = "com.github.altdesktop.playerctld",
    default_service = "org.mpris.MediaPlayer2.playerctld",
    default_path = "/org/mpris/MediaPlayer2"
)]
trait Playerctld {
    /// Shift method
    fn shift(&self) -> zbus::Result<String>;

    /// Unshift method
    fn unshift(&self) -> zbus::Result<String>;

    /// ActivePlayerChangeBegin signal
    #[zbus(signal)]
    fn active_player_change_begin(&self, name: &str) -> zbus::Result<()>;

    /// ActivePlayerChangeEnd signal
    #[zbus(signal)]
    fn active_player_change_end(&self, name: &str) -> zbus::Result<()>;

    /// PlayerNames property
    #[zbus(property)]
    fn player_names(&self) -> zbus::Result<Vec<String>>;
}
