searchState.loadedDescShard("i3status_rs", 0, "A feature-rich and resource-friendly replacement for …\nThe maximum number of blocking threads spawned by tokio\nThe collection of blocks\nSets a TOML config file\nSimple json escaping\nFormatting system\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nExample\nIgnore any attempts by i3 to pause the bar when …\nDo not send the init sequence\nAn error which originates from a block\nBorrowed data.\nOwned data.\nDisplay the stats of your AMD GPU\nThe brightness of a backlight device\nInformation about the internal power supply\nMonitor Bluetooth device\nCalendar\nCPU statistics\nThe output of a custom shell command\nA block controlled by the DBus\nDisk I/O statistics\nDisk usage statistics\nLocal docker daemon status\nExternal IP address and various information about it\nCurrently focused window\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe number of GitHub notifications\nHides the block. Send new widget to make it visible again.\nManage display temperature\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nKDEConnect indicator\nKeyboard layout indicator\nSystem load average\nUnread mail. Only supports maildir format.\nMemory and swap usage\nA custom menu\nThe current song title and artist\nNetwork information\nDisplay and toggle the state of notifications daemon\nCount of notmuch messages\nDisplay the stats of your NVidia GPU\nPending updates for different package manager like apt, …\nA pomodoro timer\nPrivacy Monitor\nThe number of pending notifications in rofication-daemon\nScratchpad indicator\nDisplay the status of a service\nSends the error to be displayed.\nSends the widget to be displayed.\nVolume level\nPing, download, and upload speeds\nThe number of tasks from the taskwarrior list\nTimer\nThe system temperature\nThe current time.\nA Toggle block\nSystem’s uptime\nShows the current connection status for VPN networks\nWatson statistics\nCurrent weather\nX11 screen information\nReturn …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn <code>BatteryDriver::Sysfs</code>\nReturn …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn …\nReturn …\nReturn …\nReturn …\nReturn …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn …\nReturn <code>InfoType::Available</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn <code>Driver::Auto</code>\nReturn …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn <code>KeyboardLayoutDriver::XkbEvent</code>\nReturn …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>PlayerName::Multiple(Default::default())</code>\nReturn …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn <code>DriverType::Dunst</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn <code>Config {     format: Default::default() }</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn <code>DriverType::Systemd</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>DeviceKind::Sink</code>\nReturn <code>SoundDriver::Auto</code>\nReturn …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn <code>TemperatureScale::Celsius</code>\nReturn …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn …\nReturn <code>DriverType::Nordvpn</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSupport for using the US National Weather Service API.\nReturn …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCan be one of <code>left</code>, <code>middle</code>, <code>right</code>, <code>up</code>/<code>wheel_up</code>, <code>down</code>/…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn …\nThe maximum delay (ms) between two clicks that are …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet to <code>true</code> to invert mouse wheel direction\nContains the error value\nError type\nContains the success value\nResult type returned from functions that can have our <code>Error</code>…\n<code>Error</code> is a trait representing the basic expectations for …\nAttempts to downcast the box to a concrete type.\nAttempts to downcast the box to a concrete type.\nAttempts to downcast the box to a concrete type.\nForwards to the method defined on the type <code>dyn Error</code>.\nReturns some mutable reference to the inner value if it is …\nForwards to the method defined on the type <code>dyn Error</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nReturns some reference to the inner value if it is of type …\nForwards to the method defined on the type <code>dyn Error</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nReturns <code>true</code> if the inner type is the same as <code>T</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nProvides type-based access to context intended for error …\nReturns the lower-level source of this error, if any.\nReturns an iterator starting with the current error and …\nWrite escaped version of <code>self</code> to a new buffer\nWrite escaped version of <code>self</code> to <code>out</code>\nWrite escaped version of <code>self</code> to a new buffer\nWrite escaped version of <code>self</code> to <code>out</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>Gi</code>\n<code>G</code>\n<code>Ki</code>\n<code>K</code>\n<code>Mi</code>\n<code>M</code>\n<code>u</code>\n<code>m</code>\n<code>n</code>\n<code>1</code>\n<code>1i</code> <code>1i</code> is a special prefix which means “one but binary”…\nSI prefix\n<code>Ti</code>\n<code>T</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>b</code>\n<code>B</code>\n<code>deg</code>\n<code>Hz</code>\n``\n<code>%</code>\n<code>s</code>\n<code>W</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRepresent block as described in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThis project uses <code>instance</code> field to uniquely identify each …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis project uses <code>name</code> field to uniquely identify each “…\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn HSVA color (hue, saturation, value, alpha).\nAn RGBA color (red, green, blue, alpha).\nReturn <code>Color::None</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new RGBA color from the <code>hex</code> value.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new RGBA color.\nCreate a new HSVA color.\nReturn <code>Separator::Native</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConvert 2 letter country code to Unicode\nA shortcut for <code>Default::default()</code> See …\nTries to find a file in standard locations:\nExample\nState of the widget. Affects the theming.\nReturn <code>State::Idle</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct <code>I3BarBlock</code> from this widget\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")